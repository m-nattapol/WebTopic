"use strict";var _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(obj){return typeof obj}:function(obj){return obj&&"function"==typeof Symbol&&obj.constructor===Symbol&&obj!==Symbol.prototype?"symbol":typeof obj};angular.module("app",["ui.router","ngResource"]).config(["$stateProvider","$urlRouterProvider","$locationProvider",function($stateProvider,$urlRouterProvider,$locationProvider){$locationProvider.html5Mode(!0),$urlRouterProvider.otherwise("/"),$stateProvider.state("index",{abstract:!0,template:'<div ui-view="jumbotronView"></div><div ui-view="contentView"></div>'}).state("index.home",{url:"/",views:{jumbotronView:{controller:function($rootScope,$scope,UserService){$rootScope.resigter=function(){UserService.register($scope.user,function(res){res.err?$rootScope.reportErr(res.err):($rootScope.userAuth=res.user,sessionStorage.setItem("user",JSON.stringify(res.user)))})}},templateUrl:"partials/jumbotron/home.html"},contentView:{resolve:{getTopics:function(TopicsService){return TopicsService.getTopics().$promise}},controller:function($rootScope,$scope,getTopics,TopicsService){$scope.title="Recently Topics",$scope.topics=[],$scope.loadMore=!0,$scope.page=0,getTopics.err?$rootScope.reportErr(getTopics.err):($scope.topics=getTopics.topics,$rootScope.removeLoadMore($scope.topics.length)),$scope.loadMore=function(){TopicsService.getTopics({myTopics:!1,page:++$scope.page},function(res){res.err?console.log(res.err):(res.topics.forEach(function(row){$scope.topics.push(row)}),$rootScope.removeLoadMore(res.topics.length))})}},templateUrl:"partials/topics.html"}}}).state("register",{url:"/register",templateUrl:"partials/jumbotron/home.html"}).state("topic",{url:"/topic/add",controller:function($rootScope,$scope,TopicService,$state){$scope.addTopic=function(){TopicService.addTopic($scope.topic,function(res){res.err?$rootScope.reportErr(res.err):$state.go("myTopic")})}},templateUrl:"partials/topic.frm.html"}).state("myTopic",{url:"/mytopics",resolve:{getTopics:function(TopicsService){return TopicsService.getTopics({myTopics:!0}).$promise}},controller:function($rootScope,$scope,getTopics,TopicsService){$scope.title="My Topics",$scope.topics=[],$scope.loadMore=!0,$scope.page=0,getTopics.err?$rootScope.reportErr(getTopics.err):($scope.topics=getTopics.topics,$rootScope.removeLoadMore($scope.topics.length)),$scope.loadMore=function(){TopicsService.getTopics({myTopics:!0,page:++$scope.page},function(res){res.err?console.log(res.err):(res.topics.forEach(function(row){$scope.topics.push(row)}),$rootScope.removeLoadMore(res.topics.length))})}},templateUrl:"partials/topics.html"}).state("profile",{url:"/profile",templateUrl:"profile.html"})}]).run(["$rootScope","$location","AuthService",function($rootScope,$location,AuthService,$scope){$rootScope.checkPath=function(path){return $location.path()==path},$rootScope.removeLoadMore=function(length){length<5&&$(".load-more").remove()},$rootScope.reportErr=function(error){$("#errAlert").empty()&&(11e3==error.code&&(error={name:"Duplicated !",message:"Topic's title was duplicated."}),$("#errAlert").append('\n                    <div class="alert alert-danger alert-dismissible" role="alert">\n                        <button type="button" class="close" data-dismiss="alert" aria-label="Close">\n                            <span aria-hidden="true">&times;</span>\n                        </button>\n                        <strong>'+error.name+"</strong> "+error.message+"\n                    </div>\n                "))},$rootScope.userAuth=null}]).factory("AuthService",function($resource){return $resource("/auth",{},{login:{url:"/auth/login",method:"POST"},logout:{url:"/auth/logout",method:"POST"}})}).factory("UserService",function($resource){return $resource("/user",{},{register:{method:"POST"}})}).factory("TopicService",function($resource){return $resource("/topic",{},{addTopic:{method:"POST"}})}).factory("TopicsService",function($resource){return $resource("/topics",{},{getTopics:{method:"POST"}})}).controller("authCtrl",function($rootScope,$scope,AuthService,$state){var userSession=JSON.parse(sessionStorage.getItem("user"));"object"==("undefined"==typeof userSession?"undefined":_typeof(userSession))?$rootScope.userAuth=userSession:sessionStorage.removeItem("user"),$scope.login=function(){AuthService.login($scope.auth,function(res){res.err||($rootScope.userAuth=res.user,sessionStorage.setItem("user",JSON.stringify(res.user)))})},$scope.logout=function(){AuthService.logout(function(res){res.user||($rootScope.userAuth=null,sessionStorage.removeItem("user"),$state.go("index.home"))})},$scope.removeErr=function(){$scope.error=null}});