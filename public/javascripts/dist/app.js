"use strict";var _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(obj){return typeof obj}:function(obj){return obj&&"function"==typeof Symbol&&obj.constructor===Symbol&&obj!==Symbol.prototype?"symbol":typeof obj},app=angular.module("app",["ui.router","ngResource"]);app.config(["$stateProvider","$urlRouterProvider","$locationProvider",function($stateProvider,$urlRouterProvider,$locationProvider){$locationProvider.html5Mode(!0),$urlRouterProvider.otherwise("/"),$stateProvider.state("index",{abstract:!0,template:'<div ui-view="jumbotronView"></div><div ui-view="contentView"></div>'}).state("index.home",{url:"/",views:{jumbotronView:{controller:"jumbotronView",templateUrl:"partials/jumbotron/home.html"},contentView:{resolve:{getTopics:function(TopicsService){return TopicsService.getTopics().$promise}},controller:"contentView",templateUrl:"partials/topics.html"}}}).state("register",{url:"/register",controller:"jumbotronView",templateUrl:"partials/jumbotron/home.html"}).state("topic",{url:"/topic",template:"<div ui-view></div>"}).state("topic.add",{url:"/add",controller:function($scope,$rootScope,TopicService,$state){$scope.addTopic=function(){TopicService.addTopic($scope.topic,function(res){res.err?$rootScope.reportErr(res.err):$state.go("myTopic")})}},templateUrl:"partials/topic.frm.html"}).state("topic.content",{url:"/:id",resolve:{topicContent:function($stateParams,TopicService){return TopicService.getContent({topicId:$stateParams.id}).$promise}},controller:"topicCtrl",templateUrl:"partials/topic.html"}).state("myTopic",{url:"/mytopics",resolve:{getTopics:function(TopicsService){return TopicsService.getTopics({myTopics:!0}).$promise}},controller:"myTopic",templateUrl:"partials/topics.html"}).state("profile",{url:"/profile",controller:"profileCtrl",templateUrl:"profile.html"})}]).run(["$rootScope","$location","AuthService",function($rootScope,$location,AuthService,$scope){$rootScope.checkPath=function(path){return $location.path()==path},$rootScope.removeLoadMore=function(length){length<5&&$(".load-more").remove()},$rootScope.reportErr=function(error){var elmId=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"errAlert";$("#"+elmId).empty()&&(11e3==error.code&&(error={name:"Duplicated !",message:"Topic's title was duplicated."}),$("#"+elmId).html('\n                    <div class="alert alert-danger alert-dismissible" role="alert">\n                        <button type="button" class="close" data-dismiss="alert" aria-label="Close">\n                            <span aria-hidden="true">&times;</span>\n                        </button>\n                        <strong>'+error.name+"</strong> "+error.message+"\n                    </div>\n                "))},$rootScope.userAuth=null}]),app.factory("AuthService",function($resource){return $resource("/auth",{},{getUser:{method:"GET"},login:{url:"/auth/login",method:"POST"},logout:{url:"/auth/logout",method:"POST"}})}).factory("UserService",function($resource){return $resource("/user/:userId",{},{register:{method:"POST"},editProfile:{method:"PUT"},editPassword:{method:"PUT",url:"user/changepass/:userId"}})}).factory("TopicService",function($resource){return $resource("/topic/api/:topicId",{},{getContent:{method:"GET"},addTopic:{method:"POST"},editTopic:{method:"PUT"},delTopic:{method:"DELETE"}})}).factory("CommentService",function($resource){return $resource("/comment/api/:topicId/:page/:skip/:back",{},{loadComment:{method:"GET"},addComment:{method:"POST"},editComment:{method:"PUT"}})}).factory("TopicsService",function($resource){return $resource("/topics",{},{getTopics:{method:"POST"}})}),app.controller("authCtrl",function($rootScope,$scope,AuthService,$state){var userSession=JSON.parse(localStorage.getItem("user"));"object"==("undefined"==typeof userSession?"undefined":_typeof(userSession))?AuthService.getUser(function(res){res.err?localStorage.removeItem("user"):$rootScope.userAuth=userSession}):localStorage.removeItem("user"),$scope.login=function(){AuthService.login($scope.auth,function(res){res.err||($rootScope.userAuth=res.user,localStorage.setItem("user",JSON.stringify(res.user)))})},$scope.logout=function(){AuthService.logout(function(res){res.user||($rootScope.userAuth=null,localStorage.removeItem("user"),$state.go("index.home"))})},$scope.removeErr=function(){$scope.error=null}}).controller("jumbotronView",function($rootScope,$scope,UserService){$rootScope.resigter=function(){UserService.register($scope.user,function(res){res.err?$rootScope.reportErr(res.err):($rootScope.userAuth=res.user,localStorage.setItem("user",JSON.stringify(res.user)))})}}).controller("contentView",function($rootScope,$scope,getTopics,TopicsService){$scope.title="Recently Topics",$scope.topics=[],$scope.page=0,getTopics.err?$rootScope.reportErr(getTopics.err):($scope.topics=getTopics.topics,$rootScope.removeLoadMore($scope.topics.length)),$scope.loadMore=function(){TopicsService.getTopics({myTopics:!1,page:++$scope.page},function(res){res.err?$rootScope.reportErr(res.err):(res.topics.forEach(function(row){$scope.topics.push(row)}),$rootScope.removeLoadMore(res.topics.length))})}}).controller("topicCtrl",function($scope,$rootScope,topicContent,TopicService,CommentService,$state){$scope.editTopic=!1,$scope.comments=[],$scope.page=0,$scope.skip=0,$rootScope.back=0,$scope.contentInit={_id:topicContent.topic._id,title:topicContent.topic.title,detail:topicContent.topic.detail,date:topicContent.topic.date,author:topicContent.topic.author},$scope.revertContent=function(){$scope.topic=$scope.contentInit},topicContent.err?$rootScope.reportErr(topicContent.err):$scope.topic=topicContent.topic,$scope.toggle=function(){$scope.editTopic=!$scope.editTopic},$scope.edit=function(){TopicService.editTopic({topicId:$scope.topic._id},{title:$scope.topic.title,detail:$scope.topic.detail},function(res){res.err?$rootScope.reportErr(res.err,"errAlert2"):$scope.toggle()})},$scope.delete=function(){TopicService.delTopic({topicId:$scope.topic._id},function(res){res.err?$rootScope.errAlert(res.err):$state.go("myTopic")})},$scope.addComment=function(){CommentService.addComment({topicId:$scope.topic._id},{newComment:$scope.newComment},function(res){res.err?$rootScope.reportErr(res.err):($scope.comments.unshift(res.comment.shift()),$scope.newComment=null,$scope.skip++)})},$scope.loadComment=function(){CommentService.loadComment({topicId:$scope.topic._id,page:$scope.page,skip:$scope.skip,back:$rootScope.back},function(res){res.err?$rootScope.reportErr(res.err):(res.comments.forEach(function(row){return $scope.comments.push(row)}),$rootScope.removeLoadMore(res.comments.length),$scope.newComment=null,$scope.page++)})},$scope.loadComment()}).controller("myTopic",function($rootScope,$scope,getTopics,TopicsService){$scope.title="My Topics",$scope.topics=[],$scope.loadMore=!0,$scope.page=0,getTopics.err?$rootScope.reportErr(getTopics.err):($scope.topics=getTopics.topics,$rootScope.removeLoadMore($scope.topics.length)),$scope.loadMore=function(){TopicsService.getTopics({myTopics:!0,page:++$scope.page},function(res){res.err?$rootScope.reportErr(res.err):(res.topics.forEach(function(row){$scope.topics.push(row)}),$rootScope.removeLoadMore(res.topics.length))})}}).controller("commentFieldCtrl",function($rootScope,$scope,CommentService,$http){$scope.userAuth=$rootScope.userAuth;var initContent=$scope.comment.detail;$scope.toggle=function(){$scope.editActive=!$scope.editActive},$scope.reset=function(){$scope.comment.detail=initContent},$scope.editComment=function(){CommentService.editComment({topicId:$scope.$parent.topic._id},{id:$scope.comment._id,commentEdit:$scope.comment.detail},function(res){res.err?$rootScope.reportErr(res.err):$scope.toggle()})},$scope.delComment=function(key){$http({url:"comment/api/"+$scope.$parent.topic._id,method:"DELETE",data:{id:$scope.comment._id},headers:{"Content-Type":"application/json"}}).then(function(res){res.data.err?$rootScope.reportErr(res.data.err):($scope.$parent.comments.splice(key,1),$rootScope.back++)})}}).controller("profileCtrl",function($rootScope,$scope,UserService){$scope.user=$rootScope.userAuth,$scope.editProfile=function(){UserService.editProfile({userId:$rootScope.userAuth.id},{name:$scope.user.name,lastname:$scope.user.lastname,email:$scope.user.email,tel:$scope.user.tel},function(res){res.err?$rootScope.reportErr(res.err,"errAlertProfile"):$("#successAlertProfile").html('\n                        <div class="alert alert-success alert-dismissible" role="alert">\n                            <button type="button" class="close" data-dismiss="alert" aria-label="Close">\n                                <span aria-hidden="true">&times;</span>\n                            </button>\n                            <strong>Success !</strong> You have changed your profile already.\n                        </div>\n                    ')})},$scope.editPassword=function(){$scope.newPass==$scope.cNewPass?UserService.editPassword({userId:$rootScope.userAuth.id},{newPass:$scope.newPass},function(res){res.err?$rootScope.reportErr(res.err,"errAlertPassword"):$("#successAlertPassword").html('\n                            <div class="alert alert-success alert-dismissible" role="alert">\n                                <button type="button" class="close" data-dismiss="alert" aria-label="Close">\n                                    <span aria-hidden="true">&times;</span>\n                                </button>\n                                <strong>Success !</strong> You have changed your password already.\n                            </div>\n                        ')}):$rootScope.reportErr({name:"Fail !",message:"Your new password was't match."},"errAlertPassword")}}),app.directive("commentField",function(){return{restrict:"E",scope:{comment:"=data",key:"=key"},controller:"commentFieldCtrl",template:'\n            <div class="comment-content" ng-show="!editActive">\n                <div class="btn-group pull-right" role="group" ng-show="userAuth.id == comment.author._id">\n                    <button type="button" class="btn btn-default btn-xs dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">\n                        <span class="caret"></span>\n                    </button>\n                    <ul class="dropdown-menu">\n                        <li><a ng-click="toggle()">Edit</a></li>\n                        <li><a ng-click="delComment(key)">Delete</a></li>\n                    </ul>\n                </div>\n                <p>{{comment.detail}}</p>\n                <footer class="pull-right">{{comment.author.name}} {{comment.author.lastname}} :: {{comment.date | date: \'medium\' }}</footer>\n                <div class="clearfix"></div>\n            </div>\n            <div ng-show="editActive">\n                <form ng-submit="editComment()">\n                    <div id="errAlert"></div>\n                    <div class="form-group">\n                        <textarea class="form-control" rows="5" ng-model="comment.detail" placeholder="Comment :"></textarea>\n                    </div>\n                    <a class="btn btn-default mg-l-10 pull-right" ng-click="toggle();reset()">Cancel</a>\n                    <button type="submit" class="btn btn-default pull-right">Edit</button>\n                    <div class="clearfix"></div>\n                </form>\n            </div>\n        '}});